<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIkAAACBCAYAAAD0d5mkAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjg4NzYyMDI3QkMxQ0U0MTE4RDNGQUE0MkVCQjgy
        RDhBIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkE1MTA5OEZDRDk0RTExRTRCNDhEOEE0OEZDNDVG
        REMwIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkE1MTA5OEZCRDk0RTExRTRCNDhEOEE0OEZDNDVG
        REMwIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzYgKFdpbmRvd3MpIj4gPHhtcE1N
        OkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NThDMDNGQzIzRUQ5RTQxMTkwRkFF
        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
        /h8S2vQCRtp//wAAAABJRU5ErkJggg==
</value>
  </data>
</root>